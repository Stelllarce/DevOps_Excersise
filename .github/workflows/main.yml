name: Main workflow
on: push
env: # Set the secret as an input
  docker_username: stelllarce
  docker_password: ${{ secrets.GITHUB_TOKEN }} #Nees to be set to be made available to the workflow
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Snyk:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js (if needed for Snyk CLI)
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk test
        run: snyk test --file=app/build.gradle --all-projects

      - name: Monitor with Snyk
        run: snyk monitor --all-projects
  SonarCloud:
    runs-on: ubuntu-latest
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4  
      - name: Run Sonar cloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  Build:
    runs-on: ubuntu-latest
    needs: [SonarCloud]
    container: gradle:6-jdk11
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4       
      - name: Build application
        run: ci/build-app.sh

      - name: Upload repo
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
  Trivy:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download code
        uses: aquasecurity/trivy-action@master
  Tests:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Test
        run: ci/unit-test-app.sh
  Linting:
    runs-on: ubuntu-latest
    needs: [Trivy, Build]
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: run linting
        uses: super-linter/super-linter/slim@v5 
        env:
          DEFAULT_BRANCH: main
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true      
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Linting]
    permissions:
      packages: write
    steps:
    - name: Download code
      uses: actions/download-artifact@v4
      with:
        name: code
        path: .
    - name: ls
      run: ls -la ci
    - name: build docker
      run: bash ci/build-docker.sh
    - name: push docker
      run: bash ci/push-docker.sh
